"""
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""

import functools

@functools.lru_cache(maxsize=None)
def fib(n):
    if n <= 0:
        return 1
    if n == 1:
        return 2
    return fib(n-1) + fib(n-2)

if __name__ == '__main__':
    assert([fib(n) for n in range(10)] == [1, 2, 3, 5, 8, 13, 21, 34, 55, 89])

    sum, i, val = 0, 0, 0
    while val < 4 * 10 ** 6:
        val, i = fib(i), i + 1
        sum += val if val % 2 == 0 else 0

    print(sum)
